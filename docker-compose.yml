name: spring_boot_todo_api

services:
  kafka:
    image: apache/kafka:latest
    hostname: broker
    container_name: kafka_broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:29093
      KAFKA_LISTENERS: PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
    healthcheck:
      test: [
        "CMD-SHELL",
        "/opt/kafka/bin/kafka-topics.sh --create --topic healthcheck --bootstrap-server broker:29092 &&
        /opt/kafka/bin/kafka-topics.sh --delete --topic healthcheck --bootstrap-server broker:29092 &&
        exit 0 || exit 1"
      ]
      interval: 10s
      retries: 5
      start_period: 10s

  database:
    image: mysql:8.4
    hostname: mysql
    container_name: mysql_84
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: todo_api
      MYSQL_ALLOW_EMPTY_PASSWORD: no
    ports:
      - "3307:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot" ]
      interval: 10s
      retries: 5
      start_period: 10s

  api:
    image: spring_boot_todo_api
    container_name: spring_boot_todo_api
    build:
      context: ./
      dockerfile: dockerfile
    ports:
      - "8080:8080"
    environment:
      MYSQL_URL: jdbc:mysql://mysql:3306/todo_api
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      KAFKA_BROKERS: "broker:29092"
      TZ: UTC
      ACTIVE_PROFILE: docker
    depends_on:
      kafka:
        condition: service_healthy
      database:
        condition: service_healthy